%{
/* Copyright 2021-2025 MarcosHCK
 * This file is part of SMIPS Assembler.
 *
 * SMIPS Assembler is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * SMIPS Assembler is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with SMIPS Assembler. If not, see <http://www.gnu.org/licenses/>.
 *
 */
#include <config.h>
#include <tag.h>
%}

%struct-type
%define hash-function-name _smips_tag_index_hash
%define lookup-function-name _smips_tag_index_lookup
%compare-strncmp
%omit-struct-type

struct _SmipsTagIndex {};
%%
value, LUA_TNUMBER, G_STRUCT_OFFSET (SmipsTag, value)
%%
void *_smips_tag_new ()
{
  SmipsTag* tag = g_slice_new0 (SmipsTag);
  g_atomic_ref_count_init (&tag->refs);
  g_print ("new 0x%x\r\n", (guint) (guintptr) tag);
return tag;
}

void *_smips_tag_new_value (int type, guint value)
{
  SmipsTag* tag = _smips_tag_new ();
    tag->type = (type & TAG_VALUE_MASK) | TAG_VALUE;
    tag->value = value;
return (void*) tag;
}

void *_smips_tag_new_op (int type, SmipsTag* left, SmipsTag* right)
{
  SmipsTag* tag = _smips_tag_new ();
    tag->type = type & TAG_OP_MASK;
    tag->left = _smips_tag_ref (left);
    tag->right = _smips_tag_ref (right);
return (void*) tag;
}

void *_smips_tag_ref (gpointer ptag)
{
  SmipsTag* tag = ptag;
  g_atomic_ref_count_inc (&tag->refs);
return (void*) tag;  
} 

void _smips_tag_unref (gpointer ptag)
{
  SmipsTag* tag = ptag;
  if (g_atomic_ref_count_dec (&tag->refs))
  {
    if (tag->type & TAG_VALUE == 0)
    {
      g_clear_pointer (&tag->left, _smips_tag_unref);
      g_clear_pointer (&tag->right, _smips_tag_unref);
    }
    g_print ("unref 0x%x\r\n", (guint) (guintptr) ptag);
    g_slice_free (SmipsTag, ptag);
  }
}
